AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Cloud formation application for VK application

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 20

Resources:
  MemberTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Join
        - ''
        - - member
      AttributeDefinitions:
        - AttributeName: MemberID
          AttributeType: S
        - AttributeName: RelationID
          AttributeType: S
      KeySchema:
        - AttributeName: MemberID
          KeyType: HASH
        - AttributeName: RelationID
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
  MyFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: lambda-functions
        S3Key: JavaLambdaDeployment.zip
      FunctionName: SimpleRequest
      Handler: com.vk.api.lambda.RequestFunctionHandler
      MemorySize: 128
      Role: 'arn:aws:iam::340885433605:role/LamdaDynamoDBRole'
#      Policies:
#        # Give DynamoDB Full Access to your Lambda Function
#        - AmazonDynamoDBFullAccess
      Runtime: java8
#  Deployment:
#    Type: 'AWS::ApiGateway::Deployment'
#    Properties:
#      RestApiId: !Ref AGRA16PAA
#      Description: First Deployment
#      StageName: StagingStage
#    DependsOn:
#      - AGM25KFD
#  AGM25KFD:
#    Type: 'AWS::ApiGateway::Method'
#    Properties:
#      AuthorizationType: NONE
#      HttpMethod: POST
#      ResourceId: !Ref AGR2JDQ8
#      RestApiId: !Ref AGRA16PAA
#      Integration:
#        Type: AWS
#        IntegrationHttpMethod: POST
#        IntegrationResponses:
#          - StatusCode: 200
#        Uri: !Join
#          - ''
#          - - 'arn:aws:apigateway:'
#            - !Ref 'AWS::Region'
#            - ':lambda:path/2015-03-31/functions/'
#            - !GetAtt
#              - LF9MBL
#              - Arn
#            - /invocations
#      MethodResponses:
#        - StatusCode: 200
#    DependsOn:
#      - LF9MBL
#      - AGR2JDQ8
#      - LPI6K5
#  AGR2JDQ8:
#    Type: 'AWS::ApiGateway::Resource'
#    Properties:
#      RestApiId: !Ref AGRA16PAA
#      ParentId: !GetAtt
#        - AGRA16PAA
#        - RootResourceId
#      PathPart: divide
#    DependsOn:
#      - AGRA16PAA
#  AGRA16PAA:
#    Type: 'AWS::ApiGateway::RestApi'
#    Properties:
#      Name: CalculationApi
#  LPI6K5:
#    Type: 'AWS::Lambda::Permission'
#    Properties:
#      Action: 'lambda:invokeFunction'
#      FunctionName: !GetAtt
#        - LF9MBL
#        - Arn
#      Principal: apigateway.amazonaws.com
#      SourceArn: !Join
#        - ''
#        - - 'arn:aws:execute-api:'
#          - !Ref 'AWS::Region'
#          - ':'
#          - !Ref 'AWS::AccountId'
#          - ':'
#          - !Ref AGRA16PAA
#          - /*

#
#  HelloLambdaFunction:
#    Type: 'AWS::Serverless::Function'
#    Properties:
#      Handler: api/event_dispatcher.lambda_handler
#      FunctionName: HelloWorld
#      Policies:
#        - Version: "2012-10-17"
#          Statement:
#            - Effect: Allow
#              Action:
#                - "dynamodb:GetItem"
#                - "dynamodb:Query"
#                - "dynamodb:Scan"
#                - "dynamodb:DeleteItem"
#                - "dynamodb:PutItem"
#                - "dynamodb:UpdateItem"
#              Resource:
#                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/member'
