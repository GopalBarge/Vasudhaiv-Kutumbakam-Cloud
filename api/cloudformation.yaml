AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Cloud formation application for VK application

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    EndpointConfiguration: REGIONAL

Parameters:
  Stage:
    Type: String
    Default: dev
  SNSTopic:
    Type: String
  SQSQueue:
    Type: String

Resources:
  MemberTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Join
        - ''
        - - member
      AttributeDefinitions:
        - AttributeName: MemberID
          AttributeType: S
        - AttributeName: RelationID
          AttributeType: S
      KeySchema:
        - AttributeName: MemberID
          KeyType: HASH
        - AttributeName: RelationID
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Variables:
        Stage:
          Ref: Stage
  MyServiceFunction:
    Type: AWS::Serverless::Function
    FunctionName: "ServerlessSpringApi-MyServiceFunction"
    Properties:
      Handler: my.service.StreamLambdaHandler::handleRequest
      Runtime: java8
      CodeUri: "build/distributions/api.zip"
      MemorySize: 2048
      Policies: AWSLambdaBasicExecutionRole
      Timeout: 30
      Environment:
        Variables:
          # Specify here variables for deployment,
          # override local using sam-local-env.json
          SPRING_PROFILES_ACTIVE: aws
      Events:
        GetResource:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGatewayApi
            Path: /ping
            Method: GET
        CheckWebsiteScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
        ReceiveFromSNS:
          Type: SNS
          Properties:
            Topic:
              Ref: SNSTopic
        ReceiveFromQueue:
          Type: SQS
          Properties:
            Queue:
              Ref: SQSQueue
#Outputs:
#  MyServiceApi:
#    Description: URL for application
#    Value: !Sub 'https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/ping'
#    Export:
#      Name: MyServiceApi

#  MyFunction:
#    Type: 'AWS::Lambda::Function'
#    Properties:
#      Code:
#        S3Bucket: lambda-functions
#        S3Key: JavaLambdaDeployment.zip
#      FunctionName: SimpleRequest
#      Handler: com.vk.api.lambda.RequestFunctionHandler
#      MemorySize: 128
#      Role: 'arn:aws:iam::340885433605:role/LamdaDynamoDBRole'
#      Runtime: java8

